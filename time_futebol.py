""""
 Enunciado do Desafio: Escalando o Time dos Sonhos
Voc√™ foi contratado como programador oficial de um clube de futebol fict√≠cio! Sua miss√£o √© criar um sistema em Python que cadastre os jogadores do time em um dicion√°rio, contendo as seguintes informa√ß√µes:

nome: Nome completo do jogador

numero: N√∫mero da camisa

posicao: Posi√ß√£o em campo (ex: Goleiro, Zagueiro, Meio-campo, Atacante)

Al√©m disso, para deixar o c√≥digo mais robusto:

Crie jogadores loop infinito.

Armazene esses jogadores em uma lista de dicion√°rios.

Novas funcionalidades que vamos implementar:
Perguntar ao t√©cnico quantos jogadores deseja de cada posi√ß√£o.

Criar uma estrutura de controle para n√£o ultrapassar esses limites.

Continuar usando a lista de dicion√°rios para armazenar os jogadores.
"""

# Lista que armazena todos os jogadores
time = []

# Posi√ß√µes v√°lidas
posicoes_validas = ["goleiro", "zagueiro", "meio", "atacante"]

# N√∫meros de camisa j√° usados
numeros_usados = []

def jogador():
    # T√©cnico define os limites por posi√ß√£o
    limite = {
        "goleiro": int(input("QUANTOS GOLEIROS DESEJA PARA O ELENCO: ")),
        "zagueiro": int(input("QUANTOS ZAGUEIROS DESEJA PARA O ELENCO: ")),
        "meio": int(input("QUANTOS MEIO-CAMPO DESEJA PARA O ELENCO: ")),
        "atacante": int(input("QUANTOS ATACANTES DESEJA PARA O ELENCO: "))
    }

    # Dicion√°rio para armazenar os nomes por posi√ß√£o
    posicoes = {
        "goleiro": [],
        "zagueiro": [],
        "meio": [],
        "atacante": []
    }

    while True:
        # Verifica se todas as posi√ß√µes est√£o completas
        if all(len(posicoes[p]) >= limite[p] for p in posicoes_validas):
            print("\n‚úÖ TODAS AS POSI√á√ïES FORAM PREENCHIDAS. CADASTRO ENCERRADO.")
            break

        nome = input("\nNOME DO JOGADOR: ")

        # Escolha da posi√ß√£o com verifica√ß√£o de validade e limite
        while True:
            print("Posi√ß√µes dispon√≠veis: goleiro, zagueiro, meio, atacante")
            posicao = input("POSI√á√ÉO: ").lower()
            if posicao not in posicoes_validas:
                print("‚ùå POSI√á√ÉO INV√ÅLIDA. TENTE NOVAMENTE!")
            elif len(posicoes[posicao]) >= limite[posicao]:
                print(f"‚ö†Ô∏è LIMITE DE {posicao.upper()}S ATINGIDO!")
            else:
                break

        # Escolha do n√∫mero da camisa com verifica√ß√£o de duplicidade
        while True:
            numero = int(input("N√öMERO DA CAMISA: "))
            if numero in numeros_usados:
                print("‚ùå ESSE N√öMERO J√Å EST√Å EM USO. TENTE OUTRO.")
            else:
                numeros_usados.append(numero)
                break

        # Cadastro do jogador
        contrato = {'Nome': nome, 'Posi√ß√£o': posicao, 'N√∫mero': numero}
        time.append(contrato)
        posicoes[posicao].append(nome)

        continuar = input("DESEJA ADICIONAR MAIS JOGADORES? [S/N]: ")
        if continuar.lower() == 'n':
            break

    # Exibe os jogadores por posi√ß√£o
    print("\nüìã ELENCO FINAL POR POSI√á√ÉO:")
    for p in posicoes_validas:
        print(f"- {p.upper()}: {posicoes[p]}")

# Executa o programa
jogador()

